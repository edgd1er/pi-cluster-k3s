---

# Based on https://ikarus.sg/using-zram-to-get-more-out-of-your-raspberry-pi/
# install zram swap config: https://github.com/StuartIanNaylor/zram-swap-config.git

- name: Populate service facts
  ansible.builtin.service_facts:

- name: Print service facts
  ansible.builtin.debug:
    var: ansible_facts.services["zram-swap-config.service"].state
  when: ansible_facts.services["zram-swap-config.service"] is defined

- name: Stop zram-swap-config service if running
  become: yes
  ansible.builtin.service:
    name: zram-swap-config
    state: stopped
  when: >
    ( ansible_facts.services["zram-swap-config.service"] is defined ) and
    ( ansible_facts.services["zram-swap-config.service"].state == "running")

- name: Clone zram-swap-config project
  ansible.builtin.git:
    repo: 'https://github.com/StuartIanNaylor/zram-swap-config.git'
    dest: /tmp/zram-swap-config
    single_branch: yes
    version: master

- name: Run the install script
  become: true
  command: ./install.sh
  register: zramres
  args:
    chdir: /tmp/zram-swap-config
  failed_when: ( zramres.stderr is defined ) and (zramres |regex_search("ERROR"))
  changed_when: zramres.stdout is defined
  when: zram

- name: Print zram install output
  ansible.builtin.debug:
    var: zramres.stdout

- name: configure zram-swap
  template:
    src: zram-swap-config.conf.j2
    dest: /etc/zram-swap-config.conf
    owner: root
    group: root
    mode: 0640
  when: zram

- name: Cleanup installation files
  ansible.builtin.file:
    path: /tmp/zram-swap-config
    state: absent

- name: Disable default swap device
  command: "{{ item }}"
  register: disable
  with_items:
    - dphys-swapfile swapoff
    - dphys-swapfile uninstall
    - /usr/sbin/update-rc.d dphys-swapfile remove
  changed_when: false

- name: enable uninstall
  become: yes
  file:
    path: /usr/local/bin/zram-swap-config-uninstall.sh
    mode: 0744
    owner: root
    group: root

- name: uninstall
  become: yes
  command: /usr/local/bin/zram-swap-config-uninstall.sh
  changed_when: false
  when: not zram or zram_uninstall
